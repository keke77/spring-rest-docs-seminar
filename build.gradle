buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'io.spring.gradle:dependency-management-plugin:0.5.3.RELEASE'
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE'
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.2'
        classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.9'
        classpath 'org.kordamp.gradle:livereload-gradle-plugin:0.2.1'
    }
    ext {
        snippetsDir = file('build/generated-snippets')
    }
}

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.asciidoctor.convert'
apply plugin: 'org.kordamp.gradle.livereload'

[compileJava, compileTestJava, javadoc]*.options*.encoding = "UTF-8"

group = 'io.example'

mainClassName = 'io.sample.SampleBootRunner'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    maven { url 'https://repo.spring.io/libs-snapshot' }
    jcenter()
}

dependencyManagement {
    imports {
        mavenBom "io.spring.platform:platform-bom:1.1.3.RELEASE"
    }
    dependencies {
        dependency 'org.modelmapper:modelmapper:0.7.5'
    }
    testCompile {
        dependencies {
            dependency 'org.springframework.restdocs:spring-restdocs-mockmvc:1.0.0.RC1'
        }
    }
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-hateoas'

    compile 'org.modelmapper:modelmapper'
    compile 'org.projectlombok:lombok'

    runtime 'org.hsqldb:hsqldb'
    runtime 'mysql:mysql-connector-java'
    runtime 'org.atteo:evo-inflector'

    testCompile 'com.jayway.jsonpath:json-path'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    backends  'html5'
    sourceDir 'src/main/asciidoc'
    attributes 'snippets': snippetsDir,
            'icons': 'font',
            'setanchors':'true',
            'idprefix':'',
            'idseparator':'-',
            'doctype': 'book',
            'docinfo1':'true',
            'source-highlighter': 'highlightjs'
    inputs.dir snippetsDir
    dependsOn test
}

liveReload {
    docRoot asciidoctor.outputDir.canonicalPath
}

jar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

eclipse {
    classpath {
        downloadJavadoc = true
        downloadSources=true
    }
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
        jdkName = '1.8'
        downloadJavadoc = true
        downloadSources = true
    }
}

eclipseJdt.onlyIf { false }
cleanEclipseJdt.onlyIf { false }